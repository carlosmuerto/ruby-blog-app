---
openapi: 3.0.1
info:
  title: BLOG API V1
  version: v1
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          example: '2'
        name:
          type: string
          example: Scott Wells
        photo:
          type: string
          example: https://randomuser.me/api/portraits/men/46.jpg
        bio:
          type: string
          example: Lorem ipsum dolor
        posts_count:
          type: integer
          example: '3'
        email:
          type: string
          example: scott_wells@test.com
      required:
      - id
      - name
      - photo
      - bio
      - posts_count
      - email
    post:
      type: object
      properties:
        id:
          type: integer
          example: '3'
        title:
          type: string
          example: Donec commodo magna vel tortor cursus.
        text:
          type: string
          example: Lorem ipsum dolor
        comments_counter:
          type: integer
          example: '11'
        likes_counter:
          type: integer
          example: '0'
      required:
      - id
      - title
      - text
      - comments_counter
      - likes_counter
    comment:
      type: object
      properties:
        id:
          type: integer
          example: '11'
        text:
          type: string
          example: THANKS EVERYONE
        users_id:
          type: integer
          example: '11'
      required:
      - id
      - text
      - users_id
    ErrorResponse:
      type: object
      properties:
        type: array
        items:
          type: string
paths:
  "/api/v1/users/{user_id}/posts/{post_id}/comments":
    get:
      summary: List comments
      security:
      - bearer_auth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      - name: post_id
        in: path
        required: true
        schema:
          type: integer
      - name: page
        in: query
        required: false
        schema:
          type: number
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/comment"
    post:
      summary: post a comment
      security:
      - bearer_auth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      - name: post_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: some comment
              required:
              - text
  "/api/v1/users/{user_id}/posts/":
    get:
      summary: List of User's post
      security:
      - bearer_auth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/post"
  "/api/v1/oauth/token":
    post:
      summary: api_token
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "<access_token>"
                  token_type:
                    type: string
                    example: "<token_type>"
                  expires_in:
                    type: number
                    example: 7200
                  refresh_token:
                    type: string
                    example: "<refresh_token>"
                  created_at:
                    type: number
                    example: 1670700609
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  example: M3DBlHPzZkIlErwg-12quuc00kjN6I89BS0Z2PAC19k
                client_secret:
                  type: string
                  example: SrxhvGubICrRvOk5NASuSPbrORAxhOfZMdOYBoiqLA4
                grant_type:
                  type: string
                  example: password
                email:
                  type: string
                password:
                  type: string
              required:
              - client_id
              - client_secret
              - grant_type
              - email
              - password
  "/api/v1/users":
    get:
      summary: List of Users
      security:
      - bearer_auth: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: number
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/user"
